<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="PictureBox1.Locked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="PictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>