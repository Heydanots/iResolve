<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="PictureBox1.Locked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="PictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        5g6Pzeb/w6NKSkP17LsAAAAASUVORK5CYII=
</value>
  </data>
</root>